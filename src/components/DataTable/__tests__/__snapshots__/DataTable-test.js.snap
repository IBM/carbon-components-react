// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DataTable default should render 1`] = `
<DataTable
  filterRows={[Function]}
  headers={
    Array [
      Object {
        "header": "Field A",
        "key": "fieldA",
      },
      Object {
        "header": "Field B",
        "key": "fieldB",
      },
    ]
  }
  locale="en"
  render={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "expandRow": [Function],
            "getBatchActionProps": [Function],
            "getCellProps": [Function],
            "getHeaderProps": [Function],
            "getRowProps": [Function],
            "getSelectionProps": [Function],
            "getTableProps": [Function],
            "headers": Array [
              Object {
                "header": "Field A",
                "key": "fieldA",
              },
              Object {
                "header": "Field B",
                "key": "fieldB",
              },
            ],
            "onInputChange": [Function],
            "rows": Array [
              Object {
                "cells": Array [
                  Object {
                    "errors": null,
                    "id": "b:fieldA",
                    "info": Object {
                      "header": "fieldA",
                      "row": "b",
                    },
                    "isEditing": false,
                    "isValid": true,
                    "value": "Field 2:A",
                  },
                  Object {
                    "errors": null,
                    "id": "b:fieldB",
                    "info": Object {
                      "header": "fieldB",
                      "row": "b",
                    },
                    "isEditing": false,
                    "isValid": true,
                    "value": "Field 2:B",
                  },
                ],
                "id": "b",
                "isExpanded": false,
                "isSelected": false,
                "state": Object {
                  "isExpanded": false,
                  "isSelected": false,
                },
              },
              Object {
                "cells": Array [
                  Object {
                    "errors": null,
                    "id": "a:fieldA",
                    "info": Object {
                      "header": "fieldA",
                      "row": "a",
                    },
                    "isEditing": false,
                    "isValid": true,
                    "value": "Field 1:A",
                  },
                  Object {
                    "errors": null,
                    "id": "a:fieldB",
                    "info": Object {
                      "header": "fieldB",
                      "row": "a",
                    },
                    "isEditing": false,
                    "isValid": true,
                    "value": "Field 1:B",
                  },
                ],
                "id": "a",
                "isExpanded": false,
                "isSelected": false,
                "state": Object {
                  "isExpanded": false,
                  "isSelected": false,
                },
              },
              Object {
                "cells": Array [
                  Object {
                    "errors": null,
                    "id": "c:fieldA",
                    "info": Object {
                      "header": "fieldA",
                      "row": "c",
                    },
                    "isEditing": false,
                    "isValid": true,
                    "value": "Field 3:A",
                  },
                  Object {
                    "errors": null,
                    "id": "c:fieldB",
                    "info": Object {
                      "header": "fieldB",
                      "row": "c",
                    },
                    "isEditing": false,
                    "isValid": true,
                    "value": "Field 3:B",
                  },
                ],
                "id": "c",
                "isExpanded": false,
                "isSelected": false,
                "state": Object {
                  "isExpanded": false,
                  "isSelected": false,
                },
              },
            ],
            "selectAll": [Function],
            "selectRow": [Function],
            "selectedRows": Array [],
            "sortBy": [Function],
          },
        ],
      ],
    }
  }
  rows={
    Array [
      Object {
        "fieldA": "Field 2:A",
        "fieldB": "Field 2:B",
        "id": "b",
      },
      Object {
        "fieldA": "Field 1:A",
        "fieldB": "Field 1:B",
        "id": "a",
      },
      Object {
        "fieldA": "Field 3:A",
        "fieldB": "Field 3:B",
        "id": "c",
      },
    ]
  }
  sortRow={[Function]}
  translateWithId={[Function]}
>
  <TableContainer
    title="DataTable with toolbar"
  >
    <div
      className="bx--data-table-v2-container"
    >
      <h4
        className="bx--data-table-v2-header"
      >
        DataTable with toolbar
      </h4>
      <Table>
        <table
          className="bx--data-table-v2 bx--data-table-v2--zebra"
        >
          <TableHead>
            <thead>
              <TableRow>
                <tr>
                  <TableHeader
                    isSortHeader={false}
                    isSortable={true}
                    key="fieldA"
                    onClick={[Function]}
                    scope="col"
                    sortDirection="NONE"
                    translateWithId={[Function]}
                  >
                    <th
                      scope="col"
                    >
                      <button
                        className="bx--table-sort-v2"
                        onClick={[Function]}
                      >
                        <span
                          className="bx--table-header-label"
                        >
                          Field A
                        </span>
                        <Icon
                          className="bx--table-sort-v2__icon"
                          description="Sort rows by this header in descending order"
                          fillRule="evenodd"
                          name="caret--down"
                          role="img"
                        >
                          <svg
                            alt="Sort rows by this header in descending order"
                            aria-label="Sort rows by this header in descending order"
                            className="bx--table-sort-v2__icon"
                            fillRule="evenodd"
                            height="5"
                            name="caret--down"
                            role="img"
                            viewBox="0 0 10 5"
                            width="10"
                          >
                            <title>
                              Sort rows by this header in descending order
                            </title>
                            <path
                              d="M10 0L5 5 0 0z"
                              key="key0"
                            />
                          </svg>
                        </Icon>
                      </button>
                    </th>
                  </TableHeader>
                  <TableHeader
                    isSortHeader={false}
                    isSortable={true}
                    key="fieldB"
                    onClick={[Function]}
                    scope="col"
                    sortDirection="NONE"
                    translateWithId={[Function]}
                  >
                    <th
                      scope="col"
                    >
                      <button
                        className="bx--table-sort-v2"
                        onClick={[Function]}
                      >
                        <span
                          className="bx--table-header-label"
                        >
                          Field B
                        </span>
                        <Icon
                          className="bx--table-sort-v2__icon"
                          description="Sort rows by this header in descending order"
                          fillRule="evenodd"
                          name="caret--down"
                          role="img"
                        >
                          <svg
                            alt="Sort rows by this header in descending order"
                            aria-label="Sort rows by this header in descending order"
                            className="bx--table-sort-v2__icon"
                            fillRule="evenodd"
                            height="5"
                            name="caret--down"
                            role="img"
                            viewBox="0 0 10 5"
                            width="10"
                          >
                            <title>
                              Sort rows by this header in descending order
                            </title>
                            <path
                              d="M10 0L5 5 0 0z"
                              key="key0"
                            />
                          </svg>
                        </Icon>
                      </button>
                    </th>
                  </TableHeader>
                </tr>
              </TableRow>
            </thead>
          </TableHead>
          <TableBody>
            <tbody>
              <TableRow
                key="b"
              >
                <tr>
                  <TableCell
                    key="b:fieldA"
                  >
                    <td
                      className=""
                    >
                      Field 2:A
                    </td>
                  </TableCell>
                  <TableCell
                    key="b:fieldB"
                  >
                    <td
                      className=""
                    >
                      Field 2:B
                    </td>
                  </TableCell>
                </tr>
              </TableRow>
              <TableRow
                key="a"
              >
                <tr>
                  <TableCell
                    key="a:fieldA"
                  >
                    <td
                      className=""
                    >
                      Field 1:A
                    </td>
                  </TableCell>
                  <TableCell
                    key="a:fieldB"
                  >
                    <td
                      className=""
                    >
                      Field 1:B
                    </td>
                  </TableCell>
                </tr>
              </TableRow>
              <TableRow
                key="c"
              >
                <tr>
                  <TableCell
                    key="c:fieldA"
                  >
                    <td
                      className=""
                    >
                      Field 3:A
                    </td>
                  </TableCell>
                  <TableCell
                    key="c:fieldB"
                  >
                    <td
                      className=""
                    >
                      Field 3:B
                    </td>
                  </TableCell>
                </tr>
              </TableRow>
            </tbody>
          </TableBody>
        </table>
      </Table>
    </div>
  </TableContainer>
</DataTable>
`;

exports[`DataTable editing should render 1`] = `
<DataTable
  filterRows={[Function]}
  headers={
    Array [
      Object {
        "header": "Field A",
        "key": "fieldA",
      },
      Object {
        "header": "Field B",
        "key": "fieldB",
      },
    ]
  }
  locale="en"
  render={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "expandRow": [Function],
            "getBatchActionProps": [Function],
            "getCellProps": [Function],
            "getHeaderProps": [Function],
            "getRowProps": [Function],
            "getSelectionProps": [Function],
            "getTableProps": [Function],
            "headers": Array [
              Object {
                "header": "Field A",
                "key": "fieldA",
              },
              Object {
                "header": "Field B",
                "key": "fieldB",
              },
            ],
            "onInputChange": [Function],
            "rows": Array [
              Object {
                "cells": Array [
                  Object {
                    "errors": null,
                    "id": "b:fieldA",
                    "info": Object {
                      "header": "fieldA",
                      "row": "b",
                    },
                    "isEditing": false,
                    "isValid": true,
                    "value": "Field 2:A",
                  },
                  Object {
                    "errors": null,
                    "id": "b:fieldB",
                    "info": Object {
                      "header": "fieldB",
                      "row": "b",
                    },
                    "isEditing": false,
                    "isValid": true,
                    "value": "Field 2:B",
                  },
                ],
                "id": "b",
                "isExpanded": false,
                "isSelected": false,
                "state": Object {
                  "isExpanded": false,
                  "isSelected": false,
                },
              },
              Object {
                "cells": Array [
                  Object {
                    "errors": null,
                    "id": "a:fieldA",
                    "info": Object {
                      "header": "fieldA",
                      "row": "a",
                    },
                    "isEditing": false,
                    "isValid": true,
                    "value": "Field 1:A",
                  },
                  Object {
                    "errors": null,
                    "id": "a:fieldB",
                    "info": Object {
                      "header": "fieldB",
                      "row": "a",
                    },
                    "isEditing": false,
                    "isValid": true,
                    "value": "Field 1:B",
                  },
                ],
                "id": "a",
                "isExpanded": false,
                "isSelected": false,
                "state": Object {
                  "isExpanded": false,
                  "isSelected": false,
                },
              },
              Object {
                "cells": Array [
                  Object {
                    "errors": null,
                    "id": "c:fieldA",
                    "info": Object {
                      "header": "fieldA",
                      "row": "c",
                    },
                    "isEditing": false,
                    "isValid": true,
                    "value": "Field 3:A",
                  },
                  Object {
                    "errors": null,
                    "id": "c:fieldB",
                    "info": Object {
                      "header": "fieldB",
                      "row": "c",
                    },
                    "isEditing": false,
                    "isValid": true,
                    "value": "Field 3:B",
                  },
                ],
                "id": "c",
                "isExpanded": false,
                "isSelected": false,
                "state": Object {
                  "isExpanded": false,
                  "isSelected": false,
                },
              },
            ],
            "selectAll": [Function],
            "selectRow": [Function],
            "selectedRows": Array [],
            "sortBy": [Function],
          },
        ],
      ],
    }
  }
  rows={
    Array [
      Object {
        "fieldA": "Field 2:A",
        "fieldB": "Field 2:B",
        "id": "b",
      },
      Object {
        "fieldA": "Field 1:A",
        "fieldB": "Field 1:B",
        "id": "a",
      },
      Object {
        "fieldA": "Field 3:A",
        "fieldB": "Field 3:B",
        "id": "c",
      },
    ]
  }
  sortRow={[Function]}
  translateWithId={[Function]}
>
  <Table
    className=""
  >
    <table
      className="bx--data-table-v2 bx--data-table-v2--zebra"
    >
      <TableBody>
        <tbody>
          <TableRow
            key="b"
          >
            <tr>
              <EditableTextCell
                id="b:fieldA"
                initialValue="Field 2:A"
                isEditable={true}
                key="b:fieldA"
                onCancel={[MockFunction]}
                onSave={[MockFunction]}
                onToggleEditCell={[Function]}
                validate={[MockFunction]}
              >
                <TableCell
                  isEditable={true}
                >
                  <td
                    className="bx--data-table-cell--editable"
                  >
                    <span
                      className="bx--data-table-cell__content"
                    >
                      Field 2:A
                    </span>
                    <div
                      className="bx--data-table-cell__activity"
                    >
                      <button
                        className="bx--data-table-cell__edit"
                        onClick={[Function]}
                        title="Edit Cell: Field 2:A"
                      >
                        <Icon
                          aria-hidden={true}
                          className="bx--data-table-cell__icon--edit"
                          description="Edit Cell: Field 2:A"
                          fillRule="evenodd"
                          name="edit--glyph"
                          role="img"
                        >
                          <svg
                            alt="Edit Cell: Field 2:A"
                            aria-hidden={true}
                            aria-label="Edit Cell: Field 2:A"
                            className="bx--data-table-cell__icon--edit"
                            fillRule="evenodd"
                            height="16"
                            name="edit--glyph"
                            role="img"
                            viewBox="0 0 16 16"
                            width="16"
                          >
                            <title>
                              Edit Cell: Field 2:A
                            </title>
                            <path
                              d="M2.032 10.924l7.99-7.99 2.97 2.97-7.99 7.99zm9.014-8.91l1.98-1.98 2.97 2.97-1.98 1.98zM0 16l3-1-2-2z"
                              key="key0"
                            />
                          </svg>
                        </Icon>
                      </button>
                    </div>
                  </td>
                </TableCell>
              </EditableTextCell>
              <TableCell
                key="b:fieldB"
              >
                <td
                  className=""
                >
                  Field 2:B
                </td>
              </TableCell>
            </tr>
          </TableRow>
          <TableRow
            key="a"
          >
            <tr>
              <EditableTextCell
                id="a:fieldA"
                initialValue="Field 1:A"
                isEditable={true}
                key="a:fieldA"
                onCancel={[MockFunction]}
                onSave={[MockFunction]}
                onToggleEditCell={[Function]}
                validate={[MockFunction]}
              >
                <TableCell
                  isEditable={true}
                >
                  <td
                    className="bx--data-table-cell--editable"
                  >
                    <span
                      className="bx--data-table-cell__content"
                    >
                      Field 1:A
                    </span>
                    <div
                      className="bx--data-table-cell__activity"
                    >
                      <button
                        className="bx--data-table-cell__edit"
                        onClick={[Function]}
                        title="Edit Cell: Field 1:A"
                      >
                        <Icon
                          aria-hidden={true}
                          className="bx--data-table-cell__icon--edit"
                          description="Edit Cell: Field 1:A"
                          fillRule="evenodd"
                          name="edit--glyph"
                          role="img"
                        >
                          <svg
                            alt="Edit Cell: Field 1:A"
                            aria-hidden={true}
                            aria-label="Edit Cell: Field 1:A"
                            className="bx--data-table-cell__icon--edit"
                            fillRule="evenodd"
                            height="16"
                            name="edit--glyph"
                            role="img"
                            viewBox="0 0 16 16"
                            width="16"
                          >
                            <title>
                              Edit Cell: Field 1:A
                            </title>
                            <path
                              d="M2.032 10.924l7.99-7.99 2.97 2.97-7.99 7.99zm9.014-8.91l1.98-1.98 2.97 2.97-1.98 1.98zM0 16l3-1-2-2z"
                              key="key0"
                            />
                          </svg>
                        </Icon>
                      </button>
                    </div>
                  </td>
                </TableCell>
              </EditableTextCell>
              <TableCell
                key="a:fieldB"
              >
                <td
                  className=""
                >
                  Field 1:B
                </td>
              </TableCell>
            </tr>
          </TableRow>
          <TableRow
            key="c"
          >
            <tr>
              <EditableTextCell
                id="c:fieldA"
                initialValue="Field 3:A"
                isEditable={true}
                key="c:fieldA"
                onCancel={[MockFunction]}
                onSave={[MockFunction]}
                onToggleEditCell={[Function]}
                validate={[MockFunction]}
              >
                <TableCell
                  isEditable={true}
                >
                  <td
                    className="bx--data-table-cell--editable"
                  >
                    <span
                      className="bx--data-table-cell__content"
                    >
                      Field 3:A
                    </span>
                    <div
                      className="bx--data-table-cell__activity"
                    >
                      <button
                        className="bx--data-table-cell__edit"
                        onClick={[Function]}
                        title="Edit Cell: Field 3:A"
                      >
                        <Icon
                          aria-hidden={true}
                          className="bx--data-table-cell__icon--edit"
                          description="Edit Cell: Field 3:A"
                          fillRule="evenodd"
                          name="edit--glyph"
                          role="img"
                        >
                          <svg
                            alt="Edit Cell: Field 3:A"
                            aria-hidden={true}
                            aria-label="Edit Cell: Field 3:A"
                            className="bx--data-table-cell__icon--edit"
                            fillRule="evenodd"
                            height="16"
                            name="edit--glyph"
                            role="img"
                            viewBox="0 0 16 16"
                            width="16"
                          >
                            <title>
                              Edit Cell: Field 3:A
                            </title>
                            <path
                              d="M2.032 10.924l7.99-7.99 2.97 2.97-7.99 7.99zm9.014-8.91l1.98-1.98 2.97 2.97-1.98 1.98zM0 16l3-1-2-2z"
                              key="key0"
                            />
                          </svg>
                        </Icon>
                      </button>
                    </div>
                  </td>
                </TableCell>
              </EditableTextCell>
              <TableCell
                key="c:fieldB"
              >
                <td
                  className=""
                >
                  Field 3:B
                </td>
              </TableCell>
            </tr>
          </TableRow>
        </tbody>
      </TableBody>
    </table>
  </Table>
</DataTable>
`;

exports[`DataTable selection should have select-all default to un-checked if no rows are present 1`] = `
<DataTable
  filterRows={[Function]}
  headers={
    Array [
      Object {
        "header": "Field A",
        "key": "fieldA",
      },
      Object {
        "header": "Field B",
        "key": "fieldB",
      },
    ]
  }
  locale="en"
  rende={[MockFunction]}
  rows={Array []}
  sortRow={[Function]}
  translateWithId={[Function]}
/>
`;

exports[`DataTable selection should render 1`] = `
<DataTable
  filterRows={[Function]}
  headers={
    Array [
      Object {
        "header": "Field A",
        "key": "fieldA",
      },
      Object {
        "header": "Field B",
        "key": "fieldB",
      },
    ]
  }
  locale="en"
  render={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "expandRow": [Function],
            "getBatchActionProps": [Function],
            "getCellProps": [Function],
            "getHeaderProps": [Function],
            "getRowProps": [Function],
            "getSelectionProps": [Function],
            "getTableProps": [Function],
            "headers": Array [
              Object {
                "header": "Field A",
                "key": "fieldA",
              },
              Object {
                "header": "Field B",
                "key": "fieldB",
              },
            ],
            "onInputChange": [Function],
            "rows": Array [
              Object {
                "cells": Array [
                  Object {
                    "errors": null,
                    "id": "b:fieldA",
                    "info": Object {
                      "header": "fieldA",
                      "row": "b",
                    },
                    "isEditing": false,
                    "isValid": true,
                    "value": "Field 2:A",
                  },
                  Object {
                    "errors": null,
                    "id": "b:fieldB",
                    "info": Object {
                      "header": "fieldB",
                      "row": "b",
                    },
                    "isEditing": false,
                    "isValid": true,
                    "value": "Field 2:B",
                  },
                ],
                "id": "b",
                "isExpanded": false,
                "isSelected": false,
                "state": Object {
                  "isExpanded": false,
                  "isSelected": false,
                },
              },
              Object {
                "cells": Array [
                  Object {
                    "errors": null,
                    "id": "a:fieldA",
                    "info": Object {
                      "header": "fieldA",
                      "row": "a",
                    },
                    "isEditing": false,
                    "isValid": true,
                    "value": "Field 1:A",
                  },
                  Object {
                    "errors": null,
                    "id": "a:fieldB",
                    "info": Object {
                      "header": "fieldB",
                      "row": "a",
                    },
                    "isEditing": false,
                    "isValid": true,
                    "value": "Field 1:B",
                  },
                ],
                "id": "a",
                "isExpanded": false,
                "isSelected": false,
                "state": Object {
                  "isExpanded": false,
                  "isSelected": false,
                },
              },
              Object {
                "cells": Array [
                  Object {
                    "errors": null,
                    "id": "c:fieldA",
                    "info": Object {
                      "header": "fieldA",
                      "row": "c",
                    },
                    "isEditing": false,
                    "isValid": true,
                    "value": "Field 3:A",
                  },
                  Object {
                    "errors": null,
                    "id": "c:fieldB",
                    "info": Object {
                      "header": "fieldB",
                      "row": "c",
                    },
                    "isEditing": false,
                    "isValid": true,
                    "value": "Field 3:B",
                  },
                ],
                "id": "c",
                "isExpanded": false,
                "isSelected": false,
                "state": Object {
                  "isExpanded": false,
                  "isSelected": false,
                },
              },
            ],
            "selectAll": [Function],
            "selectRow": [Function],
            "selectedRows": Array [],
            "sortBy": [Function],
          },
        ],
      ],
    }
  }
  rows={
    Array [
      Object {
        "fieldA": "Field 2:A",
        "fieldB": "Field 2:B",
        "id": "b",
      },
      Object {
        "fieldA": "Field 1:A",
        "fieldB": "Field 1:B",
        "id": "a",
      },
      Object {
        "fieldA": "Field 3:A",
        "fieldB": "Field 3:B",
        "id": "c",
      },
    ]
  }
  sortRow={[Function]}
  translateWithId={[Function]}
>
  <TableContainer
    title="DataTable with selection"
  >
    <div
      className="bx--data-table-v2-container"
    >
      <h4
        className="bx--data-table-v2-header"
      >
        DataTable with selection
      </h4>
      <Table>
        <table
          className="bx--data-table-v2 bx--data-table-v2--zebra"
        >
          <TableHead>
            <thead>
              <TableRow>
                <tr>
                  <TableSelectAll
                    ariaLabel="Select all rows"
                    checked={false}
                    id="data-table-1__select-all"
                    indeterminate={false}
                    name="select-all"
                    onSelect={[Function]}
                  >
                    <th
                      scope="col"
                    >
                      <InlineCheckbox
                        ariaLabel="Select all rows"
                        checked={false}
                        id="data-table-1__select-all"
                        indeterminate={false}
                        name="select-all"
                        onClick={[Function]}
                      >
                        <input
                          checked={false}
                          className="bx--checkbox"
                          id="data-table-1__select-all"
                          name="select-all"
                          onClick={[Function]}
                          type="checkbox"
                        />
                        <label
                          aria-label="Select all rows"
                          className="bx--checkbox-label"
                          htmlFor="data-table-1__select-all"
                        />
                      </InlineCheckbox>
                    </th>
                  </TableSelectAll>
                  <TableHeader
                    isSortHeader={false}
                    isSortable={true}
                    key="fieldA"
                    onClick={[Function]}
                    scope="col"
                    sortDirection="NONE"
                    translateWithId={[Function]}
                  >
                    <th
                      scope="col"
                    >
                      <button
                        className="bx--table-sort-v2"
                        onClick={[Function]}
                      >
                        <span
                          className="bx--table-header-label"
                        >
                          Field A
                        </span>
                        <Icon
                          className="bx--table-sort-v2__icon"
                          description="Sort rows by this header in descending order"
                          fillRule="evenodd"
                          name="caret--down"
                          role="img"
                        >
                          <svg
                            alt="Sort rows by this header in descending order"
                            aria-label="Sort rows by this header in descending order"
                            className="bx--table-sort-v2__icon"
                            fillRule="evenodd"
                            height="5"
                            name="caret--down"
                            role="img"
                            viewBox="0 0 10 5"
                            width="10"
                          >
                            <title>
                              Sort rows by this header in descending order
                            </title>
                            <path
                              d="M10 0L5 5 0 0z"
                              key="key0"
                            />
                          </svg>
                        </Icon>
                      </button>
                    </th>
                  </TableHeader>
                  <TableHeader
                    isSortHeader={false}
                    isSortable={true}
                    key="fieldB"
                    onClick={[Function]}
                    scope="col"
                    sortDirection="NONE"
                    translateWithId={[Function]}
                  >
                    <th
                      scope="col"
                    >
                      <button
                        className="bx--table-sort-v2"
                        onClick={[Function]}
                      >
                        <span
                          className="bx--table-header-label"
                        >
                          Field B
                        </span>
                        <Icon
                          className="bx--table-sort-v2__icon"
                          description="Sort rows by this header in descending order"
                          fillRule="evenodd"
                          name="caret--down"
                          role="img"
                        >
                          <svg
                            alt="Sort rows by this header in descending order"
                            aria-label="Sort rows by this header in descending order"
                            className="bx--table-sort-v2__icon"
                            fillRule="evenodd"
                            height="5"
                            name="caret--down"
                            role="img"
                            viewBox="0 0 10 5"
                            width="10"
                          >
                            <title>
                              Sort rows by this header in descending order
                            </title>
                            <path
                              d="M10 0L5 5 0 0z"
                              key="key0"
                            />
                          </svg>
                        </Icon>
                      </button>
                    </th>
                  </TableHeader>
                </tr>
              </TableRow>
            </thead>
          </TableHead>
          <TableBody>
            <tbody>
              <TableRow
                key="b"
              >
                <tr>
                  <TableSelectRow
                    ariaLabel="Select row"
                    checked={false}
                    id="data-table-1__select-row-b"
                    name="select-row-b"
                    onSelect={[Function]}
                  >
                    <td>
                      <InlineCheckbox
                        ariaLabel="Select row"
                        checked={false}
                        id="data-table-1__select-row-b"
                        name="select-row-b"
                        onClick={[Function]}
                      >
                        <input
                          checked={false}
                          className="bx--checkbox"
                          id="data-table-1__select-row-b"
                          name="select-row-b"
                          onClick={[Function]}
                          type="checkbox"
                        />
                        <label
                          aria-label="Select row"
                          className="bx--checkbox-label"
                          htmlFor="data-table-1__select-row-b"
                        />
                      </InlineCheckbox>
                    </td>
                  </TableSelectRow>
                  <TableCell
                    key="b:fieldA"
                  >
                    <td
                      className=""
                    >
                      Field 2:A
                    </td>
                  </TableCell>
                  <TableCell
                    key="b:fieldB"
                  >
                    <td
                      className=""
                    >
                      Field 2:B
                    </td>
                  </TableCell>
                </tr>
              </TableRow>
              <TableRow
                key="a"
              >
                <tr>
                  <TableSelectRow
                    ariaLabel="Select row"
                    checked={false}
                    id="data-table-1__select-row-a"
                    name="select-row-a"
                    onSelect={[Function]}
                  >
                    <td>
                      <InlineCheckbox
                        ariaLabel="Select row"
                        checked={false}
                        id="data-table-1__select-row-a"
                        name="select-row-a"
                        onClick={[Function]}
                      >
                        <input
                          checked={false}
                          className="bx--checkbox"
                          id="data-table-1__select-row-a"
                          name="select-row-a"
                          onClick={[Function]}
                          type="checkbox"
                        />
                        <label
                          aria-label="Select row"
                          className="bx--checkbox-label"
                          htmlFor="data-table-1__select-row-a"
                        />
                      </InlineCheckbox>
                    </td>
                  </TableSelectRow>
                  <TableCell
                    key="a:fieldA"
                  >
                    <td
                      className=""
                    >
                      Field 1:A
                    </td>
                  </TableCell>
                  <TableCell
                    key="a:fieldB"
                  >
                    <td
                      className=""
                    >
                      Field 1:B
                    </td>
                  </TableCell>
                </tr>
              </TableRow>
              <TableRow
                key="c"
              >
                <tr>
                  <TableSelectRow
                    ariaLabel="Select row"
                    checked={false}
                    id="data-table-1__select-row-c"
                    name="select-row-c"
                    onSelect={[Function]}
                  >
                    <td>
                      <InlineCheckbox
                        ariaLabel="Select row"
                        checked={false}
                        id="data-table-1__select-row-c"
                        name="select-row-c"
                        onClick={[Function]}
                      >
                        <input
                          checked={false}
                          className="bx--checkbox"
                          id="data-table-1__select-row-c"
                          name="select-row-c"
                          onClick={[Function]}
                          type="checkbox"
                        />
                        <label
                          aria-label="Select row"
                          className="bx--checkbox-label"
                          htmlFor="data-table-1__select-row-c"
                        />
                      </InlineCheckbox>
                    </td>
                  </TableSelectRow>
                  <TableCell
                    key="c:fieldA"
                  >
                    <td
                      className=""
                    >
                      Field 3:A
                    </td>
                  </TableCell>
                  <TableCell
                    key="c:fieldB"
                  >
                    <td
                      className=""
                    >
                      Field 3:B
                    </td>
                  </TableCell>
                </tr>
              </TableRow>
            </tbody>
          </TableBody>
        </table>
      </Table>
    </div>
  </TableContainer>
</DataTable>
`;
